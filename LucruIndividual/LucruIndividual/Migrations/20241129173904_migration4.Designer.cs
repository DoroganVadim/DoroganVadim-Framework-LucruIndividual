// <auto-generated />
using System;
using LucruIndividual.DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LucruIndividual.Migrations
{
    [DbContext(typeof(SocialPlatformContext))]
    [Migration("20241129173904_migration4")]
    partial class migration4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LucruIndividual.Models.DbEntities.FriendRelation", b =>
                {
                    b.Property<int>("idUser1")
                        .HasColumnType("int");

                    b.Property<int>("idUser2")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("idUser1", "idUser2");

                    b.HasIndex("idUser2");

                    b.ToTable("friendRelations");
                });

            modelBuilder.Entity("LucruIndividual.Models.DbEntities.Post", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("idImage")
                        .HasColumnType("int");

                    b.Property<int>("idUser")
                        .HasColumnType("int");

                    b.Property<string>("postText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("idImage");

                    b.HasIndex("idUser");

                    b.ToTable("posts");
                });

            modelBuilder.Entity("LucruIndividual.Models.DbEntities.PostImage", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.HasKey("id");

                    b.ToTable("postImages");
                });

            modelBuilder.Entity("LucruIndividual.Models.DbEntities.Profile", b =>
                {
                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<string>("aboutUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("birthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("imageProfilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("sex")
                        .HasColumnType("int");

                    b.Property<string>("surrname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.ToTable("profiles");
                });

            modelBuilder.Entity("LucruIndividual.Models.DbEntities.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("role")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("LucruIndividual.Models.DbEntities.FriendRelation", b =>
                {
                    b.HasOne("LucruIndividual.Models.DbEntities.User", "user1")
                        .WithMany()
                        .HasForeignKey("idUser1")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LucruIndividual.Models.DbEntities.User", "user2")
                        .WithMany()
                        .HasForeignKey("idUser2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("user1");

                    b.Navigation("user2");
                });

            modelBuilder.Entity("LucruIndividual.Models.DbEntities.Post", b =>
                {
                    b.HasOne("LucruIndividual.Models.DbEntities.PostImage", "image")
                        .WithMany()
                        .HasForeignKey("idImage")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LucruIndividual.Models.DbEntities.User", "user")
                        .WithMany()
                        .HasForeignKey("idUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("image");

                    b.Navigation("user");
                });

            modelBuilder.Entity("LucruIndividual.Models.DbEntities.Profile", b =>
                {
                    b.HasOne("LucruIndividual.Models.DbEntities.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });
#pragma warning restore 612, 618
        }
    }
}
